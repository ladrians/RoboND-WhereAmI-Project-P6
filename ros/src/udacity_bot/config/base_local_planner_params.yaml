# An alternative could be DWAPlannerROS
TrajectoryPlannerROS:

  holonomic_robot: false
  #Added
  acc_lim_x: 1.0
  acc_lim_theta: 1.0

  escape_vel: -0.2
  # Forward Simulation Parameters
  sim_time: 1.7
  sim_granularity: 0.3
  angular_sim_granularity: 0.2
  vx_samples: 6
  vtheta_samples: 10
  controller_frequency: 10.0
  # Trajectory scoring parameters
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  occdist_scale: 0.2 # The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  pdist_scale: 1.0 # The weighting for how much the controller should stay close to the path it was given . default 0.6
  gdist_scale: 0.8 # The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

  heading_lookahead: 0.325 # How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: false # Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: 0.8 # How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)

  # Oscillation Prevention Parameters
  #oscillation_reset_dist: 0.25 # How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  #escape_reset_dist: 0.1
  #escape_reset_theta: 0.1
  xy_goal_tolerance: 0.15
  yaw_goal_tolerance: 0.3

